replicaCount: 1
namespaceCreate: false

image:
  repository: flashcatcloud/cprobe
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5858

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# if true, cprobe will not write metrics to remote target
noWrite: false

plugins:
  mysql: true
  redis: true
  kafka: true
  mongodb: true

# todo components
components:
  prometheus: false
  grafana: false

# cprobe config
cprobe:
  config:
    global:
      extra_labels:
        region: bj
        zone: x
      metric_relabel_configs:
        - source_labels: [ __name__ ]
          regex: '(.*)'
          target_label: env
          replacement: 'production'
    writers:
      - url: http://prometheus:9090/api/v1/write
        extra_labels:
          from: 9090
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '(.*)'
            target_label: foo
            replacement: 'bar_${1}'
        concurrency: 10
        retry_times: 100
        retry_interval_millis: 3000
        basic_auth_user: ""
        basic_auth_pass: ""
        headers: []
        connect_timeout_millis: 500
        request_timeout_millis: 5000
        max_idle_conns_per_host: 2
        proxy_url: ""
        interface: ""
        # todo tls
#        tls_skip_verify: false
#        tls_ca: /etc/ssl/certs/ca-certificates.crt
#        tls_cert: /etc/ssl/certs/client.crt
#        tls_key: /etc/ssl/certs/client.key
#        tls_key_pwd: password
#        tls_server_name: prometheus
        tls_min_version: "1.2"
        tls_max_version: "1.3"

#      - url: http://127.0.0.1:9091/api/v1/write
#        extra_labels:
#          from: 9091

redis:
  config:
    global:
      scrape_interval: 15s
      external_labels:
        cplugin: 'redis'
    scrape_configs:
      - job_name: 'redis'
        static_configs:
          - targets:
              - 'redis-master:6379'
        scrape_rule_files:
          - 'rule.toml'

  cluster: |
    is_cluster = false

  rule: |
    [global]
    user = ""
    password = ""

kafka:
  config:
    global:
      scrape_interval: 15s
      external_labels:
        cplugin: 'kafka'

    scrape_configs:
      - job_name: 'kafka'
        static_configs:
          - targets:
              - 'kafka:9092'
        scrape_rule_files:
          - 'rule.toml'

  rule: |
    [global]
    namespace = "kafka"

mysql:
  config:
    global:
      scrape_interval: 15s
      external_labels:
        cplugin: 'mysql'

    scrape_configs:
      - job_name: 'mysql'
        static_configs:
          - targets:
              - 'mysql:3306'
        scrape_rule_files:
          - 'rule_head.toml'
          - 'rule_coll.toml'
  rule_head: |
    [global]
    user = 'root'
    password = 'root'

  rule_coll: |
    [collect_global_status]
    enabled = true
    
    [collect_global_variables]
    enabled = true
    
    [collect_slave_status]
    enabled = true
    
    [collect_info_schema_innodb_cmp]
    enabled = true
    
    [collect_info_schema_innodb_cmpmem]
    enabled = true
    
    [collect_info_schema_query_response_time]
    enabled = true
    
    [collect_info_schema_processlist]
    enabled = true
    # Minimum time a thread must be in each state to be counted
    min_time = 0
    # Enable collecting the number of processes by user
    processes_by_user = true
    # Enable collecting the number of processes by host
    processes_by_host = true
    
    [collect_info_schema_tables]
    enabled = false
    # The list of databases to collect table stats for, or '*' for all
    databases = "*"
    
    [collect_info_schema_innodb_tablespaces]
    enabled = false
    
    [collect_info_schema_innodb_metrics]
    enabled = false
    
    [collect_info_schema_userstats]
    enabled = false
    
    [collect_info_schema_clientstats]
    enabled = false
    
    [collect_info_schema_tablestats]
    enabled = false
    
    [collect_info_schema_schemastats]
    enabled = false
    
    [collect_info_schema_replica_host]
    enabled = false
    
    [collect_mysql_user]
    enabled = false
    # Enable collecting user privileges from mysql.user
    collect_user_privileges = false
    
    [collect_auto_increment_columns]
    enabled = false
    
    [collect_binlog_size]
    enabled = false
    
    [collect_perf_schema_tableiowaits]
    enabled = false
    
    [collect_perf_schema_indexiowaits]
    enabled = false
    
    [collect_perf_schema_tablelocks]
    enabled = false
    
    [collect_perf_schema_eventsstatements]
    enabled = false
    # Limit the number of events statements digests by response time
    limit = 250
    # Limit how old the 'last_seen' events statements can be, in seconds
    timelimit = 86400
    # Maximum length of the normalized statement text
    digest_text_limit = 120
    
    [collect_perf_schema_eventsstatementssum]
    enabled = false
    
    [collect_perf_schema_eventswaits]
    enabled = false
    
    [collect_perf_schema_file_events]
    enabled = false
    
    [collect_perf_schema_file_instances]
    enabled = false
    # RegEx file_name filter for performance_schema.file_summary_by_instance
    filter = ".*"
    # Remove path prefix in performance_schema.file_summary_by_instance
    remove_prefix = "/var/lib/mysql/"
    
    [collect_perf_schema_memory_events]
    enabled = false
    # Remove instrument prefix in performance_schema.memory_summary_global_by_event_name
    remove_prefix = "memory/"
    
    [collect_perf_schema_replication_group_members]
    enabled = false
    
    [collect_perf_schema_replication_group_member_stats]
    enabled = false
    
    [collect_perf_schema_replication_applier_status_by_worker]
    enabled = false
    
    [collect_sys_user_summary]
    enabled = false
    
    [collect_engine_tokudb_status]
    enabled = false
    
    [collect_engine_innodb_status]
    enabled = false
    
    [collect_heartbeat]
    enabled = false
    # Database from where to collect heartbeat data
    database = "heartbeat"
    # Table from where to collect heartbeat data
    table = "heartbeat"
    # Use UTC for timestamps of the current server
    utc = true
    
    [collect_slave_hosts]
    enabled = false




mongodb:
  config:
    global:
      scrape_interval: 15s
      external_labels:
        cplugin: 'mongodb'

    scrape_configs:
      - job_name: 'standalone'
        static_configs:
          - targets:
              - mongodb:27017
        scrape_rule_files:
          - 'rule.toml'

  rule: |
    user = ""
    password = ""
    # SetDirect specifies whether or not a direct connect should be made.
    # If set to true, the driver will only connect to the host provided 
    # in the URI and will not discover other hosts in the cluster. 
    # Direct connections are not valid if multiple hosts are specified or
    # an SRV URI is used.
    direct_connect = true
    
    # Connection timeout
    connect_timeout = "5s"
    
    # to get $collStats
    # e.g. ["db1.col1", "db2.col2"]
    collstats_colls = []
    
    # to get $indexStats
    # e.g. ["db1.col1", "db2.col2"]
    indexstats_colls = []
    
    # Enable collecting metrics from getDiagnosticData
    collect_diagnosticdata = true
    
    # Enable collecting metrics from replSetGetStatus
    collect_replicasetstatus = true
    
    # Enable collecting metrics from dbStats
    collect_dbstats = true
    
    # Enable collecting free space metrics from dbStats
    collect_dbstatsfreestorage = true
    
    # Enable collecting metrics from top admin command
    collect_topmetrics = true
    
    # Enable collecting metrics currentop admin command
    collect_currentopmetrics = true
    
    # Enable collecting metrics from $indexStats
    collect_indexstats = true
    
    # Enable collecting metrics from $collStats
    collect_collstats = true
    
    # Enable collecting metrics from profile
    collect_profile = true
    
    # Set time window for scrape slow queries.
    collect_profile_slowqueries_time_window_seconds = 30
    
    # Enable descending index name override to replace -1 with _DESC
    metrics_override_descending_index = false
    
    # Disable collstats, dbstats, topmetrics and indexstats collector if there are more than <n> collections. 0=No limit
    disable_collstats_if_collcount_more_than = 0
    
    # Enable autodiscover collections
    discovering_mode = true
    
    # Enable old mongodb-exporter compatible metrics
    compatible_mode = true
